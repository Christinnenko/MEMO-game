{"ast":null,"code":"// Модуль для изменения окончания слов\n\n// Задаем формы для слов \"попытка\" и \"пользователь\"\nexport const attemptForms = [\"попытка\", \"попытки\", \"попыток\"];\nexport const wordEndingChanger = function () {\n  // Вспомогательная функция для определения окончания в зависимости от числа\n  function getEnding(number, endings) {\n    // Приводим число к положительному значению\n    number = Math.abs(number);\n\n    // Исключаем числа от 11 до 19, так как для них окончание всегда будет \"-ок\"/\n    number %= 100;\n    if (number >= 11 && number <= 19) {\n      return endings[2];\n    }\n\n    // Определяем последнюю цифру числа\n    const lastDigit = number % 10;\n\n    // В зависимости от последней цифры определяем окончание\n    switch (lastDigit) {\n      case 1:\n        return endings[0];\n      case 2:\n      case 3:\n      case 4:\n        return endings[1];\n      default:\n        return endings[2];\n    }\n  }\n\n  // Основная функция для изменения окончания слова\n  function changeEnding(number, wordForms) {\n    // Получаем окончание с использованием вспомогательной функции\n    const ending = getEnding(number, wordForms);\n    // Формируем строку с окончанием и пробелом перед словом\n    return \" \" + ending;\n  }\n\n  // Экспортируемая часть модуля\n  return {\n    changeEnding: changeEnding\n  };\n}();","map":{"version":3,"names":["attemptForms","wordEndingChanger","getEnding","number","endings","Math","abs","lastDigit","changeEnding","wordForms","ending"],"sources":["/Users/christinnenko/Documents/skyPro-git/react-memo-game/src/helpers.js"],"sourcesContent":["// Модуль для изменения окончания слов\n\n// Задаем формы для слов \"попытка\" и \"пользователь\"\nexport const attemptForms = [\"попытка\", \"попытки\", \"попыток\"];\n\nexport const wordEndingChanger = (function () {\n  // Вспомогательная функция для определения окончания в зависимости от числа\n  function getEnding(number, endings) {\n    // Приводим число к положительному значению\n    number = Math.abs(number);\n\n    // Исключаем числа от 11 до 19, так как для них окончание всегда будет \"-ок\"/\n    number %= 100;\n    if (number >= 11 && number <= 19) {\n      return endings[2];\n    }\n\n    // Определяем последнюю цифру числа\n    const lastDigit = number % 10;\n\n    // В зависимости от последней цифры определяем окончание\n    switch (lastDigit) {\n      case 1:\n        return endings[0];\n      case 2:\n      case 3:\n      case 4:\n        return endings[1];\n      default:\n        return endings[2];\n    }\n  }\n\n  // Основная функция для изменения окончания слова\n  function changeEnding(number, wordForms) {\n    // Получаем окончание с использованием вспомогательной функции\n    const ending = getEnding(number, wordForms);\n    // Формируем строку с окончанием и пробелом перед словом\n    return \" \" + ending;\n  }\n\n  // Экспортируемая часть модуля\n  return {\n    changeEnding: changeEnding,\n  };\n})();\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,YAAY,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAE7D,OAAO,MAAMC,iBAAiB,GAAI,YAAY;EAC5C;EACA,SAASC,SAASA,CAACC,MAAM,EAAEC,OAAO,EAAE;IAClC;IACAD,MAAM,GAAGE,IAAI,CAACC,GAAG,CAACH,MAAM,CAAC;;IAEzB;IACAA,MAAM,IAAI,GAAG;IACb,IAAIA,MAAM,IAAI,EAAE,IAAIA,MAAM,IAAI,EAAE,EAAE;MAChC,OAAOC,OAAO,CAAC,CAAC,CAAC;IACnB;;IAEA;IACA,MAAMG,SAAS,GAAGJ,MAAM,GAAG,EAAE;;IAE7B;IACA,QAAQI,SAAS;MACf,KAAK,CAAC;QACJ,OAAOH,OAAO,CAAC,CAAC,CAAC;MACnB,KAAK,CAAC;MACN,KAAK,CAAC;MACN,KAAK,CAAC;QACJ,OAAOA,OAAO,CAAC,CAAC,CAAC;MACnB;QACE,OAAOA,OAAO,CAAC,CAAC,CAAC;IACrB;EACF;;EAEA;EACA,SAASI,YAAYA,CAACL,MAAM,EAAEM,SAAS,EAAE;IACvC;IACA,MAAMC,MAAM,GAAGR,SAAS,CAACC,MAAM,EAAEM,SAAS,CAAC;IAC3C;IACA,OAAO,GAAG,GAAGC,MAAM;EACrB;;EAEA;EACA,OAAO;IACLF,YAAY,EAAEA;EAChB,CAAC;AACH,CAAC,CAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}