{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst gameSlices = createSlice({\n  name: \"game\",\n  initialState: {\n    isEasyMode: false,\n    attempts: 3,\n    currentLevel: null\n  },\n  reducers: {\n    setEasyMode(state) {\n      state.isEasyMode = !state.isEasyMode;\n    },\n    updateAttempts(state) {\n      state.attempts = state.attempts - 1;\n    },\n    removeAttempts(state) {\n      state.attempts = 3;\n    }\n  }\n});\nexport const {\n  setEasyMode,\n  updateAttempts,\n  removeAttempts\n} = gameSlices.actions;\nexport const gameReducer = gameSlices.reducer;","map":{"version":3,"names":["createSlice","gameSlices","name","initialState","isEasyMode","attempts","currentLevel","reducers","setEasyMode","state","updateAttempts","removeAttempts","actions","gameReducer","reducer"],"sources":["/Users/christinnenko/Documents/skyPro-git/react-memo-game/src/store/slices.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst gameSlices = createSlice({\n  name: \"game\",\n  initialState: {\n    isEasyMode: false,\n    attempts: 3,\n    currentLevel: null,\n  },\n  reducers: {\n    setEasyMode(state) {\n      state.isEasyMode = !state.isEasyMode;\n    },\n    updateAttempts(state) {\n      state.attempts = state.attempts - 1;\n    },\n    removeAttempts(state) {\n      state.attempts = 3;\n    },\n  },\n});\n\nexport const { setEasyMode, updateAttempts, removeAttempts } = gameSlices.actions;\nexport const gameReducer = gameSlices.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,CAAC;IACXC,YAAY,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAACC,KAAK,EAAE;MACjBA,KAAK,CAACL,UAAU,GAAG,CAACK,KAAK,CAACL,UAAU;IACtC,CAAC;IACDM,cAAcA,CAACD,KAAK,EAAE;MACpBA,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,GAAG,CAAC;IACrC,CAAC;IACDM,cAAcA,CAACF,KAAK,EAAE;MACpBA,KAAK,CAACJ,QAAQ,GAAG,CAAC;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,WAAW;EAAEE,cAAc;EAAEC;AAAe,CAAC,GAAGV,UAAU,CAACW,OAAO;AACjF,OAAO,MAAMC,WAAW,GAAGZ,UAAU,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}