{"ast":null,"code":"import { shuffle } from \"lodash\";\nimport { SPADES_SUIT, CROSS_SUIT, DIAMONDS_SUIT, HEARTS_SUIT } from \"../const\";\nconst SUITS = [SPADES_SUIT, CROSS_SUIT, DIAMONDS_SUIT, HEARTS_SUIT];\nconst RANK_SIX = \"6\";\nconst RANK_SEVEN = \"7\";\nconst RANK_EIGHT = \"8\";\nconst RANK_NINE = \"9\";\nconst RANK_TEN = \"10\";\nconst RANK_JACK = \"J\";\nconst RANK_QUEEN = \"Q\";\nconst RANK_KING = \"K\";\nconst RANK_ACE = \"A\";\nconst RANKS = [RANK_SIX, RANK_SEVEN, RANK_EIGHT, RANK_NINE, RANK_TEN, RANK_JACK, RANK_QUEEN, RANK_KING, RANK_ACE];\nfunction createUniqueDeck() {\n  const deck = [];\n  SUITS.forEach(suit => {\n    RANKS.forEach(rank => {\n      deck.push({\n        rank,\n        suit\n      });\n    });\n  });\n  return deck;\n}\n\n// Сквозной айдишник для карт, важно чтобы у карт в разных партиях был уникальный айди, чтобы хорошо работала анимация переворота\nlet id = 1;\n\n// Она получает на вход количество пар в колоде\n// Возвращает колоду карт нужного размера\nexport function generateDeck(pairsCount = 3) {\n  const deck = [];\n  const uniqueDeck = shuffle(createUniqueDeck());\n  for (let i = 0; i < pairsCount; i++) {\n    const card = uniqueDeck[i];\n    // Нельзя выбирать две одинаковые карты?\n    deck.push({\n      id: id++,\n      suit: card.suit,\n      rank: card.rank,\n      open: false\n    });\n    deck.push({\n      id: id++,\n      suit: card.suit,\n      rank: card.rank,\n      open: false\n    });\n  }\n  return deck;\n}","map":{"version":3,"names":["shuffle","SPADES_SUIT","CROSS_SUIT","DIAMONDS_SUIT","HEARTS_SUIT","SUITS","RANK_SIX","RANK_SEVEN","RANK_EIGHT","RANK_NINE","RANK_TEN","RANK_JACK","RANK_QUEEN","RANK_KING","RANK_ACE","RANKS","createUniqueDeck","deck","forEach","suit","rank","push","id","generateDeck","pairsCount","uniqueDeck","i","card","open"],"sources":["/Users/christinnenko/Documents/skyPro-git/react-memo-game/src/utils/cards.js"],"sourcesContent":["import { shuffle } from \"lodash\";\nimport { SPADES_SUIT, CROSS_SUIT, DIAMONDS_SUIT, HEARTS_SUIT } from \"../const\";\n\nconst SUITS = [SPADES_SUIT, CROSS_SUIT, DIAMONDS_SUIT, HEARTS_SUIT];\n\nconst RANK_SIX = \"6\";\nconst RANK_SEVEN = \"7\";\nconst RANK_EIGHT = \"8\";\nconst RANK_NINE = \"9\";\nconst RANK_TEN = \"10\";\nconst RANK_JACK = \"J\";\nconst RANK_QUEEN = \"Q\";\nconst RANK_KING = \"K\";\nconst RANK_ACE = \"A\";\n\nconst RANKS = [RANK_SIX, RANK_SEVEN, RANK_EIGHT, RANK_NINE, RANK_TEN, RANK_JACK, RANK_QUEEN, RANK_KING, RANK_ACE];\n\nfunction createUniqueDeck() {\n  const deck = [];\n\n  SUITS.forEach(suit => {\n    RANKS.forEach(rank => {\n      deck.push({ rank, suit });\n    });\n  });\n\n  return deck;\n}\n\n// Сквозной айдишник для карт, важно чтобы у карт в разных партиях был уникальный айди, чтобы хорошо работала анимация переворота\nlet id = 1;\n\n// Она получает на вход количество пар в колоде\n// Возвращает колоду карт нужного размера\nexport function generateDeck(pairsCount = 3) {\n  const deck = [];\n  const uniqueDeck = shuffle(createUniqueDeck());\n\n  for (let i = 0; i < pairsCount; i++) {\n    const card = uniqueDeck[i];\n    // Нельзя выбирать две одинаковые карты?\n    deck.push({\n      id: id++,\n      suit: card.suit,\n      rank: card.rank,\n      open: false,\n    });\n    deck.push({\n      id: id++,\n      suit: card.suit,\n      rank: card.rank,\n      open: false,\n    });\n  }\n\n  return deck;\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,QAAQ;AAChC,SAASC,WAAW,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,QAAQ,UAAU;AAE9E,MAAMC,KAAK,GAAG,CAACJ,WAAW,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,CAAC;AAEnE,MAAME,QAAQ,GAAG,GAAG;AACpB,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,QAAQ,GAAG,IAAI;AACrB,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,UAAU,GAAG,GAAG;AACtB,MAAMC,SAAS,GAAG,GAAG;AACrB,MAAMC,QAAQ,GAAG,GAAG;AAEpB,MAAMC,KAAK,GAAG,CAACT,QAAQ,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,CAAC;AAEjH,SAASE,gBAAgBA,CAAA,EAAG;EAC1B,MAAMC,IAAI,GAAG,EAAE;EAEfZ,KAAK,CAACa,OAAO,CAACC,IAAI,IAAI;IACpBJ,KAAK,CAACG,OAAO,CAACE,IAAI,IAAI;MACpBH,IAAI,CAACI,IAAI,CAAC;QAAED,IAAI;QAAED;MAAK,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOF,IAAI;AACb;;AAEA;AACA,IAAIK,EAAE,GAAG,CAAC;;AAEV;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,UAAU,GAAG,CAAC,EAAE;EAC3C,MAAMP,IAAI,GAAG,EAAE;EACf,MAAMQ,UAAU,GAAGzB,OAAO,CAACgB,gBAAgB,CAAC,CAAC,CAAC;EAE9C,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,EAAEE,CAAC,EAAE,EAAE;IACnC,MAAMC,IAAI,GAAGF,UAAU,CAACC,CAAC,CAAC;IAC1B;IACAT,IAAI,CAACI,IAAI,CAAC;MACRC,EAAE,EAAEA,EAAE,EAAE;MACRH,IAAI,EAAEQ,IAAI,CAACR,IAAI;MACfC,IAAI,EAAEO,IAAI,CAACP,IAAI;MACfQ,IAAI,EAAE;IACR,CAAC,CAAC;IACFX,IAAI,CAACI,IAAI,CAAC;MACRC,EAAE,EAAEA,EAAE,EAAE;MACRH,IAAI,EAAEQ,IAAI,CAACR,IAAI;MACfC,IAAI,EAAEO,IAAI,CAACP,IAAI;MACfQ,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EAEA,OAAOX,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}